name: CI

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.12.0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"

      - name: Install frontend dependencies
        run: pnpm install --prefix apps/web

      - name: Run frontend linter
        run: pnpm --prefix apps/web lint

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.1
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache Poetry dependencies
        uses: actions/cache@v4
        with:
          path: apps/api/.venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('apps/api/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install backend dependencies
        run: |
          poetry install --no-root --with dev
          poetry show ruff
        working-directory: ./apps/api

      - name: Run backend linter
        run: poetry run ruff check
        working-directory: ./apps/api

  secret-scans:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install secret scanning tools
        run: |
          python -m pip install --upgrade pip
          pip install detect-secrets

          # Install trufflehog v3
          curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -b /usr/local/bin

      - name: Execute repository secret scans
        run: |
          chmod +x scripts/security/run_secret_scans.sh
          bash scripts/security/run_secret_scans.sh reports $(date +%Y%m%d)

      - name: Upload scan artifacts
        uses: actions/upload-artifact@v4
        with:
          name: secret-scan-reports
          path: |
            reports/secrets-scan-*.txt
            reports/detect-secrets-raw-*.json
            reports/ci-secrets-scan-*.log
